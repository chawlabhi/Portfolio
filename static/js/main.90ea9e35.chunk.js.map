{"version":3,"sources":["screens/Main.js","App.js","serviceWorker.js","index.js"],"names":["Main","class","target","rel","href","bottom","className","size","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oOAyLeA,EAzKF,WACX,OACE,oCACE,kBAAC,IAAD,MACA,yBAAKC,MAAM,UACT,yBAAKA,MAAM,oBACT,wBAAIA,MAAM,mBACR,0BAAMA,MAAM,8BAAZ,oBACA,0BAAMA,MAAM,wBAAZ,qBACA,uBACEC,OAAO,SACPC,IAAI,sBACJC,KAAK,qFACLH,MAAM,gCAJR,aAWN,kBAAC,IAAD,CAAMI,QAAM,GACV,yBAAKC,UAAU,UACb,yBAAKA,UAAU,aACb,wBAAIL,MAAM,mBACR,0BAAMA,MAAM,wCAAZ,YAEF,yBAAKK,UAAU,eACb,6BACE,kBAAC,IAAD,CAAQC,KAAM,OAEhB,6BACE,kBAAC,IAAD,CAASA,KAAM,OAEjB,6BACE,kBAAC,IAAD,CAASA,KAAM,OAEjB,6BACE,kBAAC,IAAD,CAASA,KAAM,OAEjB,6BACE,kBAAC,IAAD,CAAaA,KAAM,OAErB,6BACE,kBAAC,IAAD,CAAWA,KAAM,OAEnB,6BACE,kBAAC,IAAD,CAAUA,KAAM,WAO1B,yBAAKN,MAAM,WACT,kBAAC,IAAD,CAAMI,QAAM,GACV,yBAAKG,GAAG,cACN,wBAAIP,MAAM,mBACR,0BAAMA,MAAM,yCAAZ,+BAMN,yBAAKO,GAAG,OACN,wBAAIP,MAAM,mBACR,0BAAMA,MAAM,2BAAZ,eACA,0BAAMA,MAAM,0BAAZ,UAEF,0IAE0C,KAE1C,iIAIA,0FACA,qMAKA,qKAIA,8HAIA,gFACA,sFACA,0IAIA,6GAIA,wGAGA,mGACA,iFAzCF,OA2CE,wBAAIA,MAAM,mBACR,0BAAMA,MAAM,2BAAZ,cACA,0BAAMA,MAAM,0BAAZ,qCAIF,qEAGJ,kBAAC,IAAD,CAAMI,QAAM,GACV,yBAAKC,UAAU,UACb,yBAAKA,UAAU,aACb,wBAAIL,MAAM,mBACR,0BAAMA,MAAM,wCAAZ,YAEF,yBAAKK,UAAU,kBACb,uJAE2D,KAE3D,wMAKA,kKAKA,oLASR,yBAAKA,UAAU,WACb,yBAAKL,MAAM,qBACT,wBAAIA,MAAM,mBACR,0BAAMA,MAAM,yCACT,IADH,cAKA,yBAAKK,UAAU,eACb,uBACEJ,OAAO,SACPC,IAAI,sBACJC,KAAK,wDAEL,kBAAC,IAAD,CAAcE,UAAU,WAAWC,KAAM,Y,OCnK1CE,MARf,WACE,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,QCKcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.90ea9e35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/Main.css\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport {\r\n  FaJava,\r\n  FaHtml5,\r\n  FaBootstrap,\r\n  FaDocker,\r\n  FaJenkins,\r\n} from \"react-icons/fa\";\r\nimport { SiMysql, SiLinux } from \"react-icons/si\";\r\nimport { FaLinkedinIn } from \"react-icons/fa\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <Particles />\r\n      <div class=\"header\">\r\n        <div class=\"header__text-box\">\r\n          <h1 class=\"heading-primary\">\r\n            <span class=\"heading-primary--main name\"> Abhishek Chawla</span>\r\n            <span class=\"heading-primary--sub\">Software Engineer</span>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://drive.google.com/file/d/12oaxAQ3AXpsa4hTwR51qgm-OyexltNth/view?usp=sharing\"\r\n              class=\"btn btn--white btn--animated\"\r\n            >\r\n              Resume\r\n            </a>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <Fade bottom>\r\n        <div className=\"skills\">\r\n          <div className=\"container\">\r\n            <h1 class=\"heading-primary\">\r\n              <span class=\"heading-primary--main skills_heading\"> Skills</span>\r\n            </h1>\r\n            <div className=\"skills-main\">\r\n              <div>\r\n                <FaJava size={100} />\r\n              </div>\r\n              <div>\r\n                <SiMysql size={100} />\r\n              </div>\r\n              <div>\r\n                <FaHtml5 size={100} />\r\n              </div>\r\n              <div>\r\n                <SiLinux size={100} />\r\n              </div>\r\n              <div>\r\n                <FaBootstrap size={100} />\r\n              </div>\r\n              <div>\r\n                <FaJenkins size={100} />\r\n              </div>\r\n              <div>\r\n                <FaDocker size={100} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n\r\n      <div class=\"wrapper\">\r\n        <Fade bottom>\r\n          <div id=\"experience\">\r\n            <h1 class=\"heading-primary\">\r\n              <span class=\"heading-primary--main exp_end_heading\">\r\n                Experience And Education\r\n              </span>\r\n            </h1>\r\n          </div>\r\n        </Fade>\r\n        <div id=\"two\">\r\n          <h1 class=\"heading-primary\">\r\n            <span class=\"heading-secondary--main\"> Experience</span>\r\n            <span class=\"heading-tertiary--main\">Wipro</span>\r\n          </h1>\r\n          <p>\r\n            • Worked on enhancing the existing fraud detection mechanism by\r\n            building the user defined scoring rules{\" \"}\r\n          </p>\r\n          <p>\r\n            • Worked as the core team member and was responsible for the\r\n            delivery of product with quality\r\n          </p>\r\n          <p>• Coordinated with business for requirement gathering </p>\r\n          <p>\r\n            • Involved in End-to-End delivery of the project • Written quality\r\n            code and unit test cases to test the application and ensuring zero\r\n            defect leakage in code\r\n          </p>\r\n          <p>\r\n            • Implemented ITIL process for implementation readiness • Became a\r\n            single point of contact for raising changes in ServiceNow\r\n          </p>\r\n          <p>\r\n            • Experience of working in Banking and Finance segment with a global\r\n            payments organization\r\n          </p>\r\n          <p>• Experienced in production implementations.</p>\r\n          <p>• Knowledge in Java, Restful API & Micro-services </p>\r\n          <p>\r\n            • Knowledge of tools and frameworks such as Eclipse, Urban code,\r\n            GIT, Maven, Jenkins and SQL Developer\r\n          </p>\r\n          <p>\r\n            • Knowledge in Web development, Oracle SQL and UNIX/LINUX Shell\r\n            scripting\r\n          </p>\r\n          <p>\r\n            • Knowledge in creation of fraud detection rules using Actimize tool\r\n          </p>\r\n          <p>• Worked extensively on agile tools such as JIRA and Confluence</p>\r\n          <p>• Experienced in ITIL tools – ServiceNow</p>\r\n          &nbsp;\r\n          <h1 class=\"heading-primary\">\r\n            <span class=\"heading-secondary--main\"> Education</span>\r\n            <span class=\"heading-tertiary--main\">\r\n              Dehradun Institute of Technology\r\n            </span>\r\n          </h1>\r\n          <p>• Bachelors in Computer Science</p>\r\n        </div>\r\n      </div>\r\n      <Fade bottom>\r\n        <div className=\"awards\">\r\n          <div className=\"container\">\r\n            <h1 class=\"heading-primary\">\r\n              <span class=\"heading-primary--main awards_heading\"> Awards</span>\r\n            </h1>\r\n            <div className=\"awards-content\">\r\n              <p>\r\n                • Received CCTM Star of the Month award for the significant\r\n                contribution to the platform for the month of January'19{\" \"}\r\n              </p>\r\n              <p>\r\n                • Received Inspiring Performance for the quality of deliverable\r\n                as a part of Small Change Team and the improvements made for\r\n                batches further benefiting the platform\r\n              </p>\r\n              <p>\r\n                • Received Victory League award for contribution to CCTM\r\n                Application Team and the transition from NFT team to Application\r\n                Team\r\n              </p>\r\n              <p>\r\n                • Received Inspiring Performance award for creating AAE Splunk\r\n                Dashboard in order to monitor performance of AAE flows during\r\n                implementation.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n      <div className=\"contact\">\r\n        <div class=\"contact__text-box\">\r\n          <h1 class=\"heading-primary\">\r\n            <span class=\"heading-primary--main contact_heading\">\r\n              {\" \"}\r\n              Contact Me\r\n            </span>\r\n\r\n            <div className=\"socialIcons\">\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://www.linkedin.com/in/abhishek-chawla-0a9440a5\"\r\n              >\r\n                <FaLinkedinIn className=\"linkedin\" size={30} />\r\n              </a>\r\n            </div>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./screens/Main\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}